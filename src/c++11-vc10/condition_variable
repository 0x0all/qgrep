#pragma once

#define WIN32_LEAN_AND_MEAN
#define NOMINMAX
#include <windows.h>

#include <mutex>
#include <cassert>

namespace std
{
    class condition_variable
    {
    public:
        condition_variable()
        {
            InitializeConditionVariable(&cv);
        }

        void notify_one()
        {
            WakeConditionVariable(&cv);
        }

        void notify_all()
        {
            WakeAllConditionVariable(&cv);
        }

		void wait(unique_lock<mutex>& lock)
		{
			assert(lock.owns);
			SleepConditionVariableCS(&cv, &lock.mtx.cs, INFINITE);
		}

		template <typename P> void wait(unique_lock<mutex>& lock, P pred)
		{
			while (!pred()) wait(lock);
		}

    private:
        CONDITION_VARIABLE cv;
    };
}
